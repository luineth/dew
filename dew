#!/usr/bin/awk -f

BEGIN {

    "date +%Y-%m-%d" | getline today
    close("date +%Y-%m-%d")

    frontmatter = 1

    inProject = 0
    hasWorkableAction = 0
    inboxLines = 0
    todoLines = 0

    lintCount = 0
}

function isfuture(date, today) { return (date > today) }

function cacheInbox(line) { inbox[inboxLines] = inbox[inboxLines] line }

function cacheTodos(line) { todos[todoLines] = todos[todoLines] line }

function hasdate(word) {
    return match(word, /^.*[0-9]{4}-[0-9]{2}-[0-9]{2}$/)
}

function lint(message) {
    cacheTodos("! WARN: " message " ")
    todoLines++
    lintCount++
}


# Skip linter warnings
$1 == "!" { next }

# Skip frontmatter comments
$1 == ";" && frontmatter == 1 { next }
$1 != ";" { frontmatter = 0 }

# Match dangling waiting on tasks
{
    waitingOn = 0
    hasFollowUp = 0
    for(i = 2; i <= NF; i++) {
        if (match($i, /^%.+/)) {
            waitingOn = 1
        }
        if (match($i, /^[rs][0-9]{4}-[0-9]{2}-[0-9]{2}$/)) {
            hasFollowUp = 1
        }
    }
    if (waitingOn && !hasFollowUp) {
        lint("Tag without reminder date")
    }
}

# Project block init
$1 == "p" {
    inProject++
    if (inProject > 1)
        lint("Nested project")
    hasNextAction = 0
}

# Project block end
$1 == "o" {
    inProject--
    if (inProject < 0)
        lint("Unmatched outcome")
    if (!hasNextAction)
        lint("Project block without next action")
}


$1 == ">" || $1 == "#" {
    hasNextAction = 1
    workable = 1
    for (i = 2; i <= NF; i++) {
        if (match($i, /^[rs][0-9]{4}-[0-9]{2}-[0-9]{2}$/)) {
            if (isfuture(substr($i, 2, 10), today)) {
            workable = 0
            break
            }
        }
    }
}


!NF { next }

{
    switch ($1) {
        case "#":
        case ">":
            cacheTodos(inProject ? "    " : "")
            cacheTodos((workable ? "> " : "# ") substr($0, index($0, $2)))
            todoLines++
            next
        case "p":
            cacheTodos("p " substr($0, index($0, $2)))
            todoLines++
            next
        case ";":
            if (frontmatter)
                next
            cacheTodos(inProject ? "    " : "")
            cacheTodos("; " substr($0, index($0, $2)))
            todoLines++
            next
        case "x":
            cacheTodos((inProject ? "    " : ""))
            cacheTodos("x " substr($0, index($0, $2)))
            todoLines++
            next
        case "o":
            cacheTodos("    o " substr($0, index($0, $2)))
            todoLines++
            next
        case "?":
            cacheInbox($0)
            inboxLines++
            next
        case "!":
            next
        default:
            if (inProject) {
                cacheTodos("      " $0)
                todoLines++
                next
            }
            cacheInbox("? " $0)
            inboxLines++
    }
}

END {

    print "; Inbox:", inboxLines
    print "; Lints:", lintCount

    for ( i in inbox ) {
        printf "%s\n", inbox[i]
    }

    for ( i in todos ) {
        printf "%s\n", todos[i]
    }
}
#!/usr/bin/awk -f

BEGIN {

    "date +%Y-%m-%d" | getline today
    close("date +%Y-%m-%d")

    inProject = 0
    hasWorkableAction = 0
    inboxLines = 0
    todoLines = 0

    lintCount = 0
}

function isfuture(date, today) { return (date > today) }

function cacheInbox(line) {
    inbox[inboxLines] = inbox[inboxLines] line
    inboxLines ++
}

function cacheTodos(line, prefix) {
    if(indented)
        todos[todoLines] = todos[todoLines] "    "
    
    todos[todoLines] = todos[todoLines] prefix " "
    sub(/^[ \t]+/, "", line)

    if(prefix) {
        todos[todoLines] = todos[todoLines] substr($0, index($0, $2))
    } else {
        todos[todoLines] = todos[todoLines] " " line
    }
    todoLines++

}

function lint(message) {
    cacheTodos(message, ":")
    lintCount++
}

# Skip machine comments
$1 == ":" { next }

# Skip blank lines
!NF { next }

# Match dangling waiting on tasks
/%.+\y/ && $1 != "?" && $1 != "x"{
    supressingDate = 0
    for (i = 1; i <= NF; i++) {
        if (match($i, /[>\^][0-9]{4}-[0-9]{2}-[0-9]{2}/)) {
            supressingDate = 1
            break
        }
    }

    if (!supressingDate)
        lint("ERR: Tag requires follow-up date")
}

# Record contexs
/@.+\y/ {
    for(i = 1; i <= NF; i++) {
        if(match($i, /^@.+$/)) {
            if (!( $i in contexts ))
                contexts[$i] = 0
            contexts[$i]++
        }
    }
}

# Project block init
$1 == "p" {
    if (indented)
        lint("ERR: Nested project")
    
    hasNextAction = 0

    cacheTodos($0, "p")
    indented = 1
    next
}

# Inbox Items
$1 == "?" {
    cacheInbox($0)
    next
}

# Someday/Maybe
$1 == "&" {
    if(indented)
        lint("ERR: Someday item in a project")
    cacheTodos($0, "&") 
    next
}

# Project block end
$1 == "o" {
    if (!indented)
        lint("ERR: Unmatched outcome")

    if (!hasNextAction)
        lint("ERR: Project block without next action")
    
    cacheTodos($0, "o")
    indented = 0
    next

}

# Next actions
$1 == ">" || $1 == "#" {
    hasNextAction = 1
    workable = 1
    if (match($i, /^>[0-9]{4}-[0-9]{2}-[0-9]{2}$/)) {
        if (isfuture(substr($i, 2, 10), today)) {
        workable = 0
        }
    }

    cacheTodos($0, (workable ? ">" : "#"))
    next
}

# Human comments
$1 == ";" {
    cacheTodos($0, ";")
    next
}

# Completed actions
$1 == "x" {
    cacheTodos($0, "x")
    next
}

{
    # Blocked Actions
    if(indented) {
        cacheTodos($0, "")
        todoLines++
        next
    }

    # Treat remaining unmatched as inbox
    cacheInbox("? " $0)
    next
}

END {

    print ": Inbox:", inboxLines
    print ": Lints:", lintCount
    print ": Context counts:"
    for (i in contexts)
        print ":      " i ": " contexts[i]

    for ( i in inbox ) {
        printf "%s\n", inbox[i]
    }

    for ( i in todos ) {
        printf "%s\n", todos[i]
    }
}
